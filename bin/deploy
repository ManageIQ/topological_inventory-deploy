#!/bin/bash

param_file=$1
[ -z "$param_file" ] && echo -e "Error: Missing argument. Usage:\n  $0 <parameters-file>" && exit 1 

function apply_template() {
  local template=$1
  oc process -f $template --param-file=$param_file --ignore-unknown-parameters | oc apply -f -
}

function secret_missing() {
  oc get secrets -o=name | grep -q "$1"
  [ $? -ne 0 ]
}

function database_password_provided() {
  grep -q "DATABASE_PASSWORD" $param_file
}

function api_secrets_provided() {
  grep -q "SECRET_KEY" $param_file && grep -q "ENCRYPTION_KEY" $param_file
}

# For us to safely create the secret we need to have either provided a password
# or not have created the secret yet. This ensures we don't overwrite the existing
# password with a newly generated one.
(database_password_provided || secret_missing "topological-inventory-database-secrets") && apply_template "database/secret_template.yaml"
(api_secrets_provided || secret_missing "topological-inventory-api-secrets") && apply_template "api/secret_template.yaml"

# database
oc apply -f database/pvc.yaml
oc apply -f database/service.yaml
oc apply -f database/deployment_config.yaml

# Deployment Configs
apply_template "api/deploy_template.yaml"
apply_template "ingress-api/deploy_template.yaml"
apply_template "persister/deploy_template.yaml"
apply_template "openshift-operations/deploy_template.yaml"
apply_template "orchestrator/deploy_template.yaml"
